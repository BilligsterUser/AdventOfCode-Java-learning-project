buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
    }
}

plugins {
    id 'java'
    id "com.moowork.node" version "1.2.0"
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

node {
    version = '10.14.1'
    download = true
    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")
    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/frontend")
}

bootJar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

group 'org.basseur'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile "org.powermock:powermock-mockito-release-full:1.6.1"
}

task npmRunScriptBuild( type: NpmTask, dependsOn: 'npmInstall' ) {
    args = ['run-script', 'build:jar']
    execOverrides {
        it.workingDir = 'frontend'
    }
}

npmSetup.dependsOn nodeSetup
npmInstall.dependsOn npmSetup
npmRunScriptBuild.dependsOn npmInstall

/** processResources is part of the jar task and copies production resources into the production
 *  resources directory. This should only happen after then npmRunScriptBuild has generated those
 *  resources.
 */
processResources.dependsOn npmRunScriptBuild